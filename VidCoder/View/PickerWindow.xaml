<Window
	x:Class="VidCoder.View.PickerWindow"
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:controls="clr-namespace:VidCoder.Controls"
	xmlns:model="clr-namespace:VidCoder.Model"
	xmlns:res="clr-namespace:VidCoder.Resources"
	xmlns:vidCoder="clr-namespace:VidCoder"
	xmlns:viewModel="clr-namespace:VidCoder.ViewModel"
	Title="{Binding WindowTitle}"
	Width="550"
	Height="450"
	MinWidth="450"
	MinHeight="300"
	Closing="PickerWindow_OnClosing"
	ShowInTaskbar="False"
	WindowStyle="ToolWindow">
	<Grid>
		<Grid.ColumnDefinitions>
			<ColumnDefinition
				Name="listColumn"
				Width="135"
				MinWidth="70"
				MaxWidth="250" />
			<ColumnDefinition Width="*" />
		</Grid.ColumnDefinitions>
		<ListBox
			Grid.Column="0"
			HorizontalAlignment="Stretch"
			Background="WhiteSmoke"
			BorderThickness="0"
			Canvas.ZIndex="3"
			ItemsSource="{Binding PickersService.Pickers}"
			SelectedItem="{Binding PickersService.SelectedPicker}">
			<ListBox.ItemTemplate>
				<DataTemplate>
					<TextBlock
						Margin="5"
						FontSize="12"
						Text="{Binding DisplayNameWithStar}">
						<TextBlock.Style>
							<Style TargetType="TextBlock">
								<Style.Triggers>
									<DataTrigger Binding="{Binding IsSelected, RelativeSource={RelativeSource AncestorType=ListBoxItem}}" Value="True">
										<Setter Property="FontWeight" Value="Bold" />
									</DataTrigger>
								</Style.Triggers>
							</Style>
						</TextBlock.Style>
					</TextBlock>
				</DataTemplate>
			</ListBox.ItemTemplate>
		</ListBox>

		<GridSplitter
			Grid.Column="1"
			Width="4"
			HorizontalAlignment="Left"
			VerticalAlignment="Stretch"
			Background="{StaticResource SplitterBrush}"
			Canvas.ZIndex="4"
			ShowsPreview="True" />

		<Grid Grid.Column="1" Margin="4 0 0 0">
			<Grid.RowDefinitions>
				<RowDefinition Height="Auto" />
				<RowDefinition Height="Auto" />
				<RowDefinition />
			</Grid.RowDefinitions>

			<ToolBarPanel
				Grid.Row="0"
				Margin="-5 -1 -14 -1"
				HorizontalAlignment="Stretch"
				VerticalAlignment="Top"
				UseLayoutRounding="True"
				Visibility="{Binding PickersService.SelectedPicker.Picker.IsNone,
									 Converter={StaticResource InverseVisibilityConverter}}">
				<ToolBar Loaded="ToolBar_Loaded" ToolBarTray.IsLocked="True">
					<ToolBar.Background>
						<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
							<GradientStop Offset="0.0" Color="#EEE" />
							<GradientStop Offset="1.0" Color="#BBB" />
						</LinearGradientBrush>
					</ToolBar.Background>
					<Button
						Height="24"
						MinWidth="70"
						Margin="4 0 0 0"
						Command="{Binding Save}"
						Padding="5 0">
						<StackPanel Orientation="Horizontal">
							<Image
								Width="16"
								Height="16"
								Source="/Icons/save.png" />
							<TextBlock Margin="5 0 0 0" Text="{x:Static res:EncodingRes.Save}" />
						</StackPanel>
					</Button>
					<Button
						Height="24"
						MinWidth="70"
						Command="{Binding SaveAs}"
						Content="{x:Static res:EncodingRes.SaveAs}"
						Padding="5 0" />
					<Button
						Height="24"
						MinWidth="70"
						Command="{Binding Rename}"
						Content="{x:Static res:EncodingRes.Rename}"
						Padding="5 0" />
					<Button
						Height="24"
						MinWidth="70"
						Command="{Binding Delete}"
						Padding="5 0"
						Visibility="{Binding PickersService.SelectedPicker.Picker.IsModified,
											 Converter={StaticResource VisibilityConverter}}">
						<StackPanel Orientation="Horizontal">
							<Image
								Width="16"
								Height="16"
								Source="/Icons/undo_16x16.png" />
							<TextBlock Margin="4 0 0 0" Text="{x:Static res:EncodingRes.Revert}" />
						</StackPanel>
					</Button>
					<Button
						Height="24"
						MinWidth="70"
						Command="{Binding Delete}"
						Padding="5 0"
						Visibility="{Binding DeleteButtonVisible,
											 Converter={StaticResource VisibilityConverter}}">
						<StackPanel Orientation="Horizontal">
							<Grid Background="Transparent">
								<Rectangle
									Width="14"
									Height="3"
									Fill="{StaticResource RedFill}">
									<Rectangle.LayoutTransform>
										<RotateTransform Angle="-45" />
									</Rectangle.LayoutTransform>
								</Rectangle>
								<Rectangle
									Width="14"
									Height="3"
									Fill="{StaticResource RedFill}">
									<Rectangle.LayoutTransform>
										<RotateTransform Angle="45" />
									</Rectangle.LayoutTransform>
								</Rectangle>
							</Grid>
							<TextBlock Margin="4 0 0 0" Text="{x:Static res:CommonRes.Delete}" />
						</StackPanel>
					</Button>
				</ToolBar>
			</ToolBarPanel>

			<Grid
				Grid.Row="1"
				Background="{StaticResource DismissableMessageBrush}"
				Visibility="{Binding ShowHelpMessage,
									 Converter={StaticResource VisibilityConverter}}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<TextBlock Margin="10" Text="{x:Static res:PickerRes.PickerHelpText}" />
				<Button
					Grid.Column="1"
					HorizontalAlignment="Right"
					VerticalAlignment="Top"
					Command="{Binding DismissMessage}"
					Content="{x:Static res:CommonRes.DismissMessage}"
					Padding="5"
					Style="{StaticResource RemoveButtonStyle}" />
			</Grid>

			<ScrollViewer Grid.Row="2" VerticalScrollBarVisibility="Auto">
				<StackPanel
					Margin="12"
					VerticalAlignment="Top"
					Orientation="Vertical">
					<!--  Output location  -->
					<TextBlock Style="{StaticResource ConfigSectionHeader}" Text="{x:Static res:PickerRes.OutputLocation}" />
					<StackPanel Style="{StaticResource ConfigSectionStack}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>

							<CheckBox
								Grid.Column="0"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Content="{x:Static res:PickerRes.OverrideDirectoryCheckBox}"
								IsChecked="{Binding OutputDirectoryOverrideEnabled}" />

							<TextBox
								Grid.Column="1"
								Height="22"
								Margin="5 0 0 0"
								VerticalAlignment="Center"
								VerticalContentAlignment="Center"
								IsEnabled="{Binding OutputDirectoryOverrideEnabled}"
								Text="{Binding OutputDirectoryOverride,
											   Mode=TwoWay,
											   UpdateSourceTrigger=PropertyChanged}" />

							<Button
								Grid.Column="2"
								MinWidth="80"
								Margin="10 0 0 0"
								Command="{Binding PickOutputDirectory}"
								Content="{x:Static res:CommonRes.Browse}"
								IsEnabled="{Binding OutputDirectoryOverrideEnabled}"
								Padding="10 0" />
						</Grid>
						<Grid Margin="0 10 0 0">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<CheckBox
								Grid.Column="0"
								HorizontalAlignment="Left"
								VerticalAlignment="Center"
								Content="{x:Static res:CommonRes.OverrideNameFormatCheckBox}"
								IsChecked="{Binding NameFormatOverrideEnabled}" />

							<TextBox
								Grid.Column="1"
								Height="22"
								Margin="5 0 0 0"
								VerticalAlignment="Center"
								VerticalContentAlignment="Center"
								IsEnabled="{Binding NameFormatOverrideEnabled}"
								Text="{Binding NameFormatOverride,
											   Mode=TwoWay,
											   UpdateSourceTrigger=PropertyChanged}" />
						</Grid>

						<TextBlock 
							Margin="22 2 0 10"
							Visibility="{Binding NameFormatOverrideEnabled,
								                     Converter={StaticResource VisibilityConverter}}"
							Text="{Binding NameFormatArguments, StringFormat={x:Static res:PickerRes.OverrideNameFormatLabel}}"
							TextWrapping="Wrap" />
						<CheckBox
							Height="16"
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:CommonRes.OutputToSourceDirCheckBox}"
							IsChecked="{Binding OutputToSourceDirectory}"
							IsThreeState="True">
							<CheckBox.ToolTip>
								<StackPanel Orientation="Horizontal">
									<CheckBox
										VerticalAlignment="Center"
										IsChecked="{x:Null}"
										IsHitTestVisible="False"
										IsThreeState="True" />
									<TextBlock VerticalAlignment="Center" Text=" - " />
									<TextBlock VerticalAlignment="Center" Text="{x:Static res:PickerRes.UseGlobalSettingToolTip}" />
								</StackPanel>
							</CheckBox.ToolTip>
						</CheckBox>
						<CheckBox
							Height="16"
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:CommonRes.PreserveFolderStructureCheckBox}"
							IsChecked="{Binding PreserveFolderStructureInBatch}"
							IsThreeState="True">
							<CheckBox.ToolTip>
								<StackPanel Orientation="Vertical">
									<TextBlock VerticalAlignment="Center" Text="{x:Static res:CommonRes.PreserveFolderStructureToolTip}" />
									<StackPanel Margin="0 14 0 0" Orientation="Horizontal">
										<CheckBox
											VerticalAlignment="Center"
											IsChecked="{x:Null}"
											IsHitTestVisible="False"
											IsThreeState="True" />
										<TextBlock VerticalAlignment="Center" Text=" - " />
										<TextBlock VerticalAlignment="Center" Text="{x:Static res:PickerRes.UseGlobalSettingToolTip}" />
									</StackPanel>
								</StackPanel>
							</CheckBox.ToolTip>
						</CheckBox>
					</StackPanel>

					<!--  Title selection  -->
					<TextBlock Style="{StaticResource ConfigSectionHeader}" Text="{x:Static res:PickerRes.TitleSelection}" />
					<StackPanel Style="{StaticResource ConfigSectionStack}">
						<CheckBox HorizontalAlignment="Left" IsChecked="{Binding TitleRangeSelectEnabled}">
							<StackPanel Orientation="Horizontal">
								<TextBlock
									Margin="0 0 4 0"
									VerticalAlignment="Center"
									Text="{x:Static res:QueueTitlesRes.LengthRangePre}" />
								<controls:NumberBox
									Width="46"
									AllowEmpty="False"
									IsEnabled="{Binding TitleRangeSelectEnabled}"
									Minimum="0"
									Number="{Binding TitleRangeSelectStartMinutes,
													 Mode=TwoWay}" />
								<TextBlock
									Margin="4 0 4 0"
									VerticalAlignment="Center"
									Text="{x:Static res:QueueTitlesRes.LengthRangeMid}" />
								<controls:NumberBox
									Width="46"
									AllowEmpty="False"
									IsEnabled="{Binding TitleRangeSelectEnabled}"
									Minimum="0"
									Number="{Binding TitleRangeSelectEndMinutes,
													 Mode=TwoWay}" />
								<TextBlock
									Margin="4 0 0 0"
									VerticalAlignment="Center"
									Text="{x:Static res:QueueTitlesRes.LengthRangePost}" />
							</StackPanel>
						</CheckBox>
					</StackPanel>

					<!--  Audio selection  -->
					<TextBlock Style="{StaticResource ConfigSectionHeader}" Text="{x:Static res:PickerRes.AudioSelection}" />
					<StackPanel Style="{StaticResource ConfigSectionStack}">
						<RadioButton
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:CommonRes.Disabled}"
							GroupName="autoAudio1"
							IsChecked="{Binding AudioSelectionMode,
												Converter={StaticResource EnumBoolConverter},
												ConverterParameter={x:Static model:AudioSelectionMode.Disabled}}"
							ToolTip="{x:Static res:OptionsRes.AutoAudioDisabledToolTip}" />
						<RadioButton
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:CommonRes.First}"
							GroupName="autoAudio2"
							IsChecked="{Binding AudioSelectionMode,
												Converter={StaticResource EnumBoolConverter},
												ConverterParameter={x:Static model:AudioSelectionMode.First}}"
							ToolTip="{x:Static res:PickerRes.AudioFirstToolTip}" />
						<StackPanel
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Orientation="Horizontal">
							<RadioButton
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Content="{x:Static res:PickerRes.LanguagesRadioButton}"
								GroupName="autoAudio3"
								IsChecked="{Binding AudioSelectionMode,
													Converter={StaticResource EnumBoolConverter},
													ConverterParameter={x:Static model:AudioSelectionMode.Language}}" />
							<StackPanel
								Margin="0 -3 0 0"
								Orientation="Horizontal"
								Visibility="{Binding AudioSelectionMode,
													 Converter={StaticResource EnumVisibilityConverter},
													 ConverterParameter={x:Static model:AudioSelectionMode.Language}}">
								<ItemsControl
									Margin="10 0 0 0"
									HorizontalAlignment="Left"
									ItemsSource="{Binding AudioLanguages}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<StackPanel Margin="0 0 0 4" Orientation="Horizontal">
												<ComboBox
													Height="23"
													MinWidth="120"
													DisplayMemberPath="Display"
													ItemsSource="{Binding Languages}"
													SelectedValue="{Binding Code}"
													SelectedValuePath="Code" />
												<Button
													Height="23"
													Command="{Binding RemoveAudioLanguage}"
													Content="{x:Static res:PickerRes.RemoveLanguageToolTip}"
													Style="{StaticResource RemoveButtonStyle}"
													Visibility="{Binding PickerWindowViewModel.HasMultipleAudioLanguages,
																		 Converter={StaticResource VisibilityConverter}}" />
											</StackPanel>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
								<Button
									Height="23"
									Margin="10 0 0 0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Command="{Binding AddAudioLanguage}"
									Padding="5 0"
									UseLayoutRounding="True">
									<StackPanel Orientation="Horizontal">
										<Polygon Style="{StaticResource PlusSign}" />
										<TextBlock Text="{x:Static res:PickerRes.AddLanguageButton}" />
									</StackPanel>
								</Button>
							</StackPanel>
						</StackPanel>

						<StackPanel Margin="20 0 0 0" Visibility="{Binding AudioSelectionMode, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter={x:Static model:AudioSelectionMode.Language}}">
							<RadioButton
								Margin="0 3 0 0"
								Content="{Binding AudioFirstTrackLabel}"
								GroupName="autoAudioLanguage1"
								IsChecked="{Binding AudioLanguageAll,
													Converter={StaticResource InverseBoolRadioConverter}}" />

							<RadioButton
								Margin="0 6 0 0"
								Content="{Binding AudioAllTracksLabel}"
								GroupName="autoAudioLanguage2"
								IsChecked="{Binding AudioLanguageAll,
													Converter={StaticResource BoolRadioConverter}}" />
						</StackPanel>

						<RadioButton
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:CommonRes.All}"
							GroupName="autoAudio4"
							IsChecked="{Binding AudioSelectionMode,
												Converter={StaticResource EnumBoolConverter},
												ConverterParameter={x:Static model:AudioSelectionMode.All}}"
							ToolTip="{x:Static res:PickerRes.AudioAllToolTip}" />

						<StackPanel
							Margin="20 4 0 0"
							Orientation="Horizontal"
							Visibility="{Binding AudioSelectionMode,
												 Converter={StaticResource EnumVisibilityConverter},
												 ConverterParameter={x:Static model:AudioSelectionMode.All}}">
							<TextBlock
								Margin="0 2 0 0"
								VerticalAlignment="Top"
								Text="{x:Static res:PickerRes.SortLanguagesLabel}" />

							<TextBlock
								Margin="10 0 0 0"
								Style="{StaticResource DescriptiveText}"
								Text="{x:Static res:MainRes.NoneParen}"
								Visibility="{Binding HasNoAudioLanguages,
													 Converter={StaticResource VisibilityConverter}}" />

							<ItemsControl
								Margin="10 0 0 0"
								HorizontalAlignment="Left"
								ItemsSource="{Binding AudioLanguages}">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<StackPanel Margin="0 0 0 4" Orientation="Horizontal">
											<ComboBox
												Height="23"
												MinWidth="120"
												DisplayMemberPath="Display"
												ItemsSource="{Binding Languages}"
												SelectedValue="{Binding Code}"
												SelectedValuePath="Code" />
											<Button
												Height="23"
												Command="{Binding RemoveAudioLanguage}"
												Content="{x:Static res:PickerRes.RemoveLanguageToolTip}"
												Style="{StaticResource RemoveButtonStyle}" />
										</StackPanel>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<Button
								Height="23"
								Margin="10 0 0 0"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Command="{Binding AddAudioLanguage}"
								Padding="5 0"
								UseLayoutRounding="True">
								<StackPanel Orientation="Horizontal">
									<Polygon Style="{StaticResource PlusSign}" />
									<TextBlock Text="{x:Static res:PickerRes.AddLanguageButton}" />
								</StackPanel>
							</Button>
						</StackPanel>
					</StackPanel>

					<!--  Subtitle selection  -->
					<TextBlock Style="{StaticResource ConfigSectionHeader}" Text="{x:Static res:PickerRes.SubtitleSelection}" />
					<StackPanel Style="{StaticResource ConfigSectionStack}">
						<RadioButton
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:CommonRes.Disabled}"
							GroupName="autoSubtitle1"
							IsChecked="{Binding SubtitleSelectionMode,
												Converter={StaticResource EnumBoolConverter},
												ConverterParameter={x:Static model:SubtitleSelectionMode.Disabled}}"
							ToolTip="{x:Static res:OptionsRes.AutoSubtitleDisabledToolTip}" />
						<RadioButton
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:CommonRes.None}"
							GroupName="autoSubtitle2"
							IsChecked="{Binding SubtitleSelectionMode,
												Converter={StaticResource EnumBoolConverter},
												ConverterParameter={x:Static model:SubtitleSelectionMode.None}}"
							ToolTip="{x:Static res:PickerRes.SubtitleNoneToolTip}" />
						<RadioButton
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:CommonRes.First}"
							GroupName="autoSubtitle2"
							IsChecked="{Binding SubtitleSelectionMode,
												Converter={StaticResource EnumBoolConverter},
												ConverterParameter={x:Static model:SubtitleSelectionMode.First}}"
							ToolTip="{x:Static res:PickerRes.SubtitleFirstToolTip}" />
						<RadioButton
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Content="{x:Static res:PickerRes.ForeignAudioSearchRadioButton}"
							GroupName="autoSubtitle3"
							IsChecked="{Binding SubtitleSelectionMode,
												Converter={StaticResource EnumBoolConverter},
												ConverterParameter={x:Static model:SubtitleSelectionMode.ForeignAudioSearch}}"
							ToolTip="{x:Static res:CommonRes.ForeignAudioSearchToolTip}" />

						<StackPanel
							Margin="0 6 0 0"
							HorizontalAlignment="Left"
							VerticalAlignment="Top"
							Orientation="Horizontal">
							<RadioButton
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Content="{x:Static res:PickerRes.LanguagesRadioButton}"
								GroupName="autoSubtitle4"
								IsChecked="{Binding SubtitleSelectionMode,
													Converter={StaticResource EnumBoolConverter},
													ConverterParameter={x:Static model:SubtitleSelectionMode.Language}}" />
							<StackPanel
								Margin="0 -3 0 0"
								Orientation="Horizontal"
								Visibility="{Binding SubtitleSelectionMode,
													 Converter={StaticResource EnumVisibilityConverter},
													 ConverterParameter={x:Static model:SubtitleSelectionMode.Language}}">

								<ItemsControl
									Margin="10 0 0 0"
									HorizontalAlignment="Left"
									ItemsSource="{Binding SubtitleLanguages}">
									<ItemsControl.ItemTemplate>
										<DataTemplate>
											<StackPanel Margin="0 0 0 4" Orientation="Horizontal">
												<ComboBox
													Height="23"
													MinWidth="120"
													DisplayMemberPath="Display"
													ItemsSource="{Binding Languages}"
													SelectedValue="{Binding Code}"
													SelectedValuePath="Code" />
												<Button
													Height="23"
													Command="{Binding RemoveSubtitleLanguage}"
													Content="{x:Static res:PickerRes.RemoveLanguageToolTip}"
													Style="{StaticResource RemoveButtonStyle}"
													Visibility="{Binding PickerWindowViewModel.HasMultipleSubtitleLanguages,
																		 Converter={StaticResource VisibilityConverter}}" />
											</StackPanel>
										</DataTemplate>
									</ItemsControl.ItemTemplate>
								</ItemsControl>
								<Button
									Height="23"
									Margin="10 0 0 0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top"
									Command="{Binding AddSubtitleLanguage}"
									Padding="5 0"
									UseLayoutRounding="True">
									<StackPanel Orientation="Horizontal">
										<Polygon Style="{StaticResource PlusSign}" />
										<TextBlock Text="{x:Static res:PickerRes.AddLanguageButton}" />
									</StackPanel>
								</Button>
							</StackPanel>
						</StackPanel>

						<StackPanel Margin="20 0 0 0" Visibility="{Binding SubtitleSelectionMode, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter={x:Static model:SubtitleSelectionMode.Language}}">
							<CheckBox
								Margin="0 6 0 0"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Content="{x:Static res:PickerRes.OnlyIfDifferentFromAudioCheckBox}"
								IsChecked="{Binding SubtitleLanguageOnlyIfDifferent}" />
							<RadioButton
								Margin="0 10 0 0"
								Content="{Binding SubtitleFirstTrackLabel}"
								GroupName="autoSubtitleLanguage1"
								IsChecked="{Binding SubtitleLanguageAll,
													Converter={StaticResource InverseBoolRadioConverter}}" />
							<RadioButton
								Margin="0 6 0 0"
								Content="{Binding SubtitleAllTracksLabel}"
								GroupName="autoSubtitleLanguage2"
								IsChecked="{Binding SubtitleLanguageAll,
													Converter={StaticResource BoolRadioConverter}}" />
						</StackPanel>

						<RadioButton
							Margin="0 6 0 0"
							Content="{x:Static res:CommonRes.All}"
							GroupName="autoSubtitle5"
							IsChecked="{Binding SubtitleSelectionMode,
												Converter={StaticResource EnumBoolConverter},
												ConverterParameter={x:Static model:SubtitleSelectionMode.All}}"
							ToolTip="{x:Static res:PickerRes.AllSubtitlesToolTip}" />

						<StackPanel
							Margin="20 4 0 0"
							Orientation="Horizontal"
							Visibility="{Binding SubtitleSelectionMode,
												 Converter={StaticResource EnumVisibilityConverter},
												 ConverterParameter={x:Static model:SubtitleSelectionMode.All}}">
							<TextBlock
								Margin="0 2 0 0"
								VerticalAlignment="Top"
								Text="{x:Static res:PickerRes.SortLanguagesLabel}" />

							<TextBlock
								Margin="10 0 0 0"
								Style="{StaticResource DescriptiveText}"
								Text="{x:Static res:MainRes.NoneParen}"
								Visibility="{Binding HasNoSubtitleLanguages,
													 Converter={StaticResource VisibilityConverter}}" />

							<ItemsControl
								Margin="10 0 0 0"
								HorizontalAlignment="Left"
								ItemsSource="{Binding SubtitleLanguages}">
								<ItemsControl.ItemTemplate>
									<DataTemplate>
										<StackPanel Margin="0 0 0 4" Orientation="Horizontal">
											<ComboBox
												Height="23"
												MinWidth="120"
												DisplayMemberPath="Display"
												ItemsSource="{Binding Languages}"
												SelectedValue="{Binding Code}"
												SelectedValuePath="Code" />
											<Button
												Height="23"
												Command="{Binding RemoveSubtitleLanguage}"
												Content="{x:Static res:PickerRes.RemoveLanguageToolTip}"
												Style="{StaticResource RemoveButtonStyle}" />
										</StackPanel>
									</DataTemplate>
								</ItemsControl.ItemTemplate>
							</ItemsControl>
							<Button
								Height="23"
								Margin="10 0 0 0"
								HorizontalAlignment="Left"
								VerticalAlignment="Top"
								Command="{Binding AddSubtitleLanguage}"
								Padding="5 0"
								UseLayoutRounding="True">
								<StackPanel Orientation="Horizontal">
									<Polygon Style="{StaticResource PlusSign}" />
									<TextBlock Text="{x:Static res:PickerRes.AddLanguageButton}" />
								</StackPanel>
							</Button>
						</StackPanel>

						<CheckBox
							Margin="0 15 0 0"
							Content="{x:Static res:PickerRes.ForcedOnlyCheckBox}"
							IsChecked="{Binding SubtitleForcedOnly}"
							ToolTip="{x:Static res:CommonRes.ForcedSubtitleToolTip}"
							Visibility="{Binding SubtitleModChoices,
												 Converter={StaticResource EnumVisibilityInverseConverter},
												 ConverterParameter={x:Static viewModel:SubtitleModifierChoices.None}}" />

						<StackPanel Orientation="Vertical" Visibility="{Binding SubtitleModChoices, Converter={StaticResource EnumVisibilityConverter}, ConverterParameter={x:Static viewModel:SubtitleModifierChoices.Single}}">
							<CheckBox
								Margin="0 6 0 0"
								Content="{x:Static res:PickerRes.DefaultCheckBox}"
								IsChecked="{Binding SubtitleDefault}"
								ToolTip="{x:Static res:PickerRes.SingleSubtitleDefaultToolTip}" />

							<CheckBox
								Margin="0 6 0 0"
								Content="{x:Static res:PickerRes.BurnInCheckBox}"
								IsChecked="{Binding SubtitleBurnIn}"
								ToolTip="{x:Static res:CommonRes.BurnedSubtitleToolTip}" />
						</StackPanel>

						<CheckBox
							Margin="0 6 0 0"
							Content="{x:Static res:PickerRes.FirstAsDefaultCheckBox}"
							IsChecked="{Binding SubtitleDefault}"
							ToolTip="{x:Static res:PickerRes.MultipleSubtitleDefaultToolTip}"
							Visibility="{Binding SubtitleModChoices,
												 Converter={StaticResource EnumVisibilityConverter},
												 ConverterParameter={x:Static viewModel:SubtitleModifierChoices.Multiple}}" />
					</StackPanel>

					<!--  Encoding  -->
					<TextBlock Style="{StaticResource ConfigSectionHeader}" Text="{x:Static res:PickerRes.EncodingSection}" />
					<StackPanel Style="{StaticResource ConfigSectionStack}">
						<StackPanel Orientation="Horizontal" ToolTip="{x:Static res:PickerRes.PresetOverrideToolTip}">
							<CheckBox
								VerticalAlignment="Center"
								Content="{x:Static res:PickerRes.PresetLabel}"
								IsChecked="{Binding UseEncodingPreset}" />

							<ComboBox
								Margin="6 0 0 0"
								VerticalAlignment="Center"
								IsEnabled="{Binding UseEncodingPreset}"
								SelectedItem="{Binding SelectedPreset}"
								Style="{StaticResource PresetComboStyle}" />
						</StackPanel>

						<CheckBox
							Margin="0 6 0 0"
							Content="{x:Static res:PickerRes.AutoQueueOnScanCheckBox}"
							IsChecked="{Binding AutoQueueOnScan}" />

						<CheckBox
							Margin="20 6 0 0"
							Content="{x:Static res:PickerRes.AutoEncodeOnScanCheckBox}"
							IsChecked="{Binding AutoEncodeOnScan}"
							IsEnabled="{Binding AutoQueueOnScan}" />
					</StackPanel>

					<!--  Post-encoding  -->
					<TextBlock Style="{StaticResource ConfigSectionHeader}" Text="{x:Static res:PickerRes.PostEncodingSection}" />
					<StackPanel Style="{StaticResource ConfigSectionStack}">
						<Grid>
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<CheckBox Content="{x:Static res:PickerRes.SendFileToLabel}" IsChecked="{Binding PostEncodeActionEnabled}" />

							<TextBox
								Grid.Column="1"
								Height="22"
								Margin="5 0 0 0"
								VerticalAlignment="Center"
								VerticalContentAlignment="Center"
								IsEnabled="{Binding PostEncodeActionEnabled}"
								Text="{Binding PostEncodeExecutable,
											   Mode=TwoWay,
											   UpdateSourceTrigger=PropertyChanged}" />

							<Button
								Grid.Column="2"
								Margin="10 0 0 0"
								Command="{Binding PickPostEncodeExecutable}"
								Content="{x:Static res:CommonRes.Browse}"
								IsEnabled="{Binding PostEncodeActionEnabled}"
								Padding="10 0" />
						</Grid>
						<Grid Margin="20 6 0 0" ToolTip="{x:Static res:PickerRes.PostEncodeArgumentsToolTip}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="Auto" />
								<ColumnDefinition />
							</Grid.ColumnDefinitions>

							<TextBlock Text="{x:Static res:PickerRes.PostEncodeArgumentsLabel}" />

							<TextBox
								Grid.Column="1"
								Height="22"
								Margin="5 0 0 0"
								VerticalAlignment="Center"
								VerticalContentAlignment="Center"
								IsEnabled="{Binding PostEncodeActionEnabled}"
								Text="{Binding PostEncodeArguments,
											   Mode=TwoWay,
											   UpdateSourceTrigger=PropertyChanged}" />
						</Grid>
					</StackPanel>
				</StackPanel>
			</ScrollViewer>
		</Grid>
	</Grid>
</Window>
