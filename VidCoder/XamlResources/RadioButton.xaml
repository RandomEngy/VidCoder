<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:local="clr-namespace:VidCoder.XamlResources">
	<Style x:Key="FocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle
						Margin="2"
						SnapsToDevicePixels="true"
						Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
						StrokeDashArray="1 2"
						StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="OptionMarkFocusVisual">
		<Setter Property="Control.Template">
			<Setter.Value>
				<ControlTemplate>
					<Rectangle
						Margin="14 0 0 0"
						SnapsToDevicePixels="true"
						Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"
						StrokeDashArray="1 2"
						StrokeThickness="1" />
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="RadioButtonBaseStyle" TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}" />
		<Setter Property="Background" Value="{DynamicResource RadioButton.Static.Background}" />
		<Setter Property="BorderBrush" Value="{DynamicResource RadioButton.Static.Border}" />
		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
		<Setter Property="BorderThickness" Value="1" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Grid
						x:Name="templateRoot"
						Background="Transparent"
						SnapsToDevicePixels="True">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Border
							x:Name="radioButtonBorder"
							Margin="1 1 2 1"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="100">
							<Grid x:Name="markGrid" Margin="2">
								<Ellipse
									x:Name="optionMark"
									MinWidth="6"
									MinHeight="6"
									Fill="{DynamicResource RadioButton.Static.Glyph}"
									Opacity="0" />
							</Grid>
						</Border>
						<ContentPresenter
							x:Name="contentPresenter"
							Grid.Column="1"
							Margin="{TemplateBinding Padding}"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasContent" Value="true">
							<Setter Property="FocusVisualStyle" Value="{StaticResource OptionMarkFocusVisual}" />
							<Setter Property="Padding" Value="4 -1 0 0" />
						</Trigger>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="radioButtonBorder" Property="Background" Value="{DynamicResource RadioButton.MouseOver.Background}" />
							<Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource RadioButton.MouseOver.Border}" />
							<Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource RadioButton.MouseOver.Glyph}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="radioButtonBorder" Property="Background" Value="{DynamicResource RadioButton.Disabled.Background}" />
							<Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource RadioButton.Disabled.Border}" />
							<Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource RadioButton.Disabled.Glyph}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="radioButtonBorder" Property="Background" Value="{DynamicResource RadioButton.Pressed.Background}" />
							<Setter TargetName="radioButtonBorder" Property="BorderBrush" Value="{DynamicResource RadioButton.Pressed.Border}" />
							<Setter TargetName="optionMark" Property="Fill" Value="{DynamicResource RadioButton.Pressed.Glyph}" />
						</Trigger>
						<Trigger Property="IsChecked" Value="true">
							<Setter TargetName="optionMark" Property="Opacity" Value="1" />
						</Trigger>
						<Trigger Property="IsChecked" Value="{x:Null}">
							<Setter TargetName="optionMark" Property="Opacity" Value="0.56" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style BasedOn="{StaticResource RadioButtonBaseStyle}" TargetType="RadioButton" />
</ResourceDictionary>