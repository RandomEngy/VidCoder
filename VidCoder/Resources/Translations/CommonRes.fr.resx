<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=5.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutLicense" xml:space="preserve">
    <value>Ce programme est un logiciel libre ; vous pouvez le redistribuer et/ou le modifier sous les termes de la GNU General Public License (GPL : licence publique générale) telle que publiée par la Free Software Foundation ; soit la version 2 de la licence, ou (à votre choix) toute version ultérieure. 

Ce programme est distribué dans l'espoir qu'il sera utile, mais sans AUCUNE GARANTIE; même la garantie implicite de qualité marchande ou d'ADEQUATION à un usage individuel.  Voir la GNU General Public License (GPL : licence publique générale) pour plus de détails.  

Une copie intégrale de la GNU (GPL : licence publique générale) a été incluse avec ce programme.

Traduit en Français par TheCrazyRabbit...</value>
  </data>
  <data name="BurnedSubtitleToolTip" xml:space="preserve">
    <value>Insérer les sous-titres dans la vidéo. Avec des sous-titres incrustés, vous ne pourrez pas les désactiver lors de la lecture de la vidéo.</value>
  </data>
  <data name="DefaultSubtitleToolTip" xml:space="preserve">
    <value>Marquer cette piste de sous-titre par défaut. Cela sera visible pendant la lecture jusqu'à ce qu'une autre piste soit choisie.</value>
  </data>
  
  <data name="OffsetSubtitleToolTip" xml:space="preserve">
    <value>La quantité de temps pour faire avancer ou retarder l'apparition des sous-titres donnés.</value>
  </data>
  <data name="QueueColumnNameRange" xml:space="preserve">
    <value>Tranche</value>
    <comment>The label for the queue column that specifies what portion of the video to encode. (Like 25:23 - 37:50)</comment>
  </data>
  <data name="QueueColumnNameDestination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="QueueColumnNameSource" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="QueueColumnNameTitle" xml:space="preserve">
    <value>Titre</value>
    <comment>The label for the queue column that shows the title number. For DVDs or Blu-rays this identifies which title on the disc will be encoded. For files this is usually 1.</comment>
  </data>
  <data name="QueueColumnNameAudioQuality" xml:space="preserve">
    <value>Qualité audio</value>
  </data>
  <data name="QueueColumnNameAudioEncoder" xml:space="preserve">
    <value>Encodeur audio</value>
  </data>
  <data name="QueueColumnNameVideoEncoder" xml:space="preserve">
    <value>Encodeur vidéo</value>
  </data>
  <data name="QueueColumnNameVideoQuality" xml:space="preserve">
    <value>Qualité vidéo</value>
  </data>
  <data name="QueueEtaToolTip" xml:space="preserve">
    <value>Temps restant estimé pour terminer tous les travaux de la file d'attente.</value>
  </data>
  <data name="QueueColumnNameDuration" xml:space="preserve">
    <value>Durée</value>
  </data>
  <data name="ForeignAudioSearchToolTip" xml:space="preserve">
    <value>Recherche une piste de sous-titre susceptible de contenir des morceaux de langue étrangère. Bon pour les films qui sont principalement dans votre langue maternelle.</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Par défaut</value>
    <comment>Usually used in settings, when there is a default option. For example for Decomb there is Off, Default, Fast, Bob and Custom.</comment>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Personnalisé</value>
    <comment>Usually used in settings, when there is a default option. For example for Decomb there is Off, Default, Fast, Bob and Custom.</comment>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Parcourir...</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="PreviewLabel" xml:space="preserve">
    <value>Aperçu</value>
  </data>
  <data name="Automatic" xml:space="preserve">
    <value>Automatique</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Inactif</value>
    <comment>Usually used in settings, when there is a default option. For example for Decomb there is Off, Default, Fast, Bob and Custom.</comment>
  </data>
  <data name="All" xml:space="preserve">
    <value>Tous</value>
  </data>
  <data name="StreamChoice" xml:space="preserve">
    <value>Flux : {0}</value>
    <comment>Used in the encoding settings dialog to mark which audio stream an audio encoding is targeting. By default the encoding works on all streams but you can target it to affect only the first stream, in which case it would label it "Stream 1"</comment>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Désactivé</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Supprimer</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copier</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Oui</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>Non</value>
  </data>
  <data name="CouldNotAccessDirectoriesError" xml:space="preserve">
    <value>Ne peut pas accéder aux répertoires suivants :</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>Aucun</value>
  </data>
  <data name="Succeeded" xml:space="preserve">
    <value>Réussi</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Échoué</value>
  </data>
  <data name="FilePickerExtTemplate" xml:space="preserve">
    <value>Fichiers : {0}</value>
  </data>
  <data name="QueueColumnNamePreset" xml:space="preserve">
    <value>Pré-réglage</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Succès</value>
  </data>
  <data name="ConfirmDialogTitle" xml:space="preserve">
    <value>Confirmer</value>
  </data>
  <data name="FileFailureErrorMessage" xml:space="preserve">
    <value>Impossible de terminer l'opération de fichier.</value>
  </data>
  <data name="FileFailureErrorTitle" xml:space="preserve">
    <value>Erreur d'opération de fichier</value>
  </data>
  <data name="OverrideNameFormatCheckBox" xml:space="preserve">
    <value>Substituer le formatage du nom:</value>
  </data>
  <data name="OutputToSourceDirCheckBox" xml:space="preserve">
    <value>Sortie dans le répertoire source si possible</value>
  </data>
  <data name="PreserveFolderStructureCheckBox" xml:space="preserve">
    <value>Garder la structure de dossiers dans l'encodage par lots</value>
  </data>
  <data name="PreserveFolderStructureToolTip" xml:space="preserve">
    <value>Si vous encodez un dossier plein de fichiers, ils seront encodés dans des sous-dossiers en gardant la même structure du dossiers source.</value>
  </data>
  <data name="DismissMessage" xml:space="preserve">
    <value>Rejeter le message</value>
    <comment>Appears as a tooltip on inline, dismissable messages</comment>
  </data>
  <data name="PresetFileFilter" xml:space="preserve">
    <value>Fichier de préconfiguration VidCoder</value>
    <comment>File dialog description of a .vjpreset file: JSON file that stores an exported preset.</comment>
  </data>
  <data name="QueueFileFilter" xml:space="preserve">
    <value>File d'attente VidCoder</value>
    <comment>File dialog description of a .vjqueue file: JSON file that stores an exported queue.</comment>
  </data>
  <data name="First" xml:space="preserve">
    <value>Premièr</value>
    <comment>Choice to pick the first item in a list, like audio or subtitle tracks.</comment>
  </data>
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
  
</root>