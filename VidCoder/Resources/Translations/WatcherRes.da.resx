<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="ActivateWatcherButton" xml:space="preserve">
    <value>Aktivér Filovervågning</value>
  </data>
  <data name="AddFolderToWatch" xml:space="preserve">
    <value>Tilføj mappe til overvågning</value>
  </data>
  <data name="CancelMenuItem" xml:space="preserve">
    <value>Annullér</value>
  </data>
  <data name="DeactivateWatcherButton" xml:space="preserve">
    <value>Deaktiver Filovervågning</value>
  </data>
  <data name="OpenContainingFolderMenuItem" xml:space="preserve">
    <value>Åbn indeholdende mappe</value>
  </data>
  <data name="PathColumnHeader" xml:space="preserve">
    <value>Sti</value>
  </data>
  <data name="PickerLabel" xml:space="preserve">
    <value>Vælger:</value>
  </data>
  <data name="PickWatchedFolderDialogDescription" xml:space="preserve">
    <value>Vælg en overvågningsmappe</value>
  </data>
  <data name="PresetLabel" xml:space="preserve">
    <value>Forudindstilling for kodning:</value>
  </data>
  <data name="RemoveWatchedFolder" xml:space="preserve">
    <value>Fjern overvåget mappe</value>
  </data>
  <data name="RetryMenuItem" xml:space="preserve">
    <value>Forsøg igen</value>
  </data>
  <data name="RunWhenClosedCheckBox" xml:space="preserve">
    <value>Kør når VidCoder er lukket</value>
  </data>
  <data name="ServiceInstallError" xml:space="preserve">
    <value>Kunne ikke installere filovervågningstjenesten.</value>
  </data>
  <data name="ServiceUninstallError" xml:space="preserve">
    <value>Kunne ikke afinstallere filovervågningstjenesten.</value>
  </data>
  <data name="StatusCanceledToolTip" xml:space="preserve">
    <value>Kodningen blev annulleret fordi den blev fjernet fra køen.</value>
  </data>
  <data name="StatusColumnHeader" xml:space="preserve">
    <value>Status</value>
  </data>
  <data name="StatusFailedToolTip" xml:space="preserve">
    <value>Kodningen fejlede.</value>
  </data>
  <data name="StatusOutputToolTip" xml:space="preserve">
    <value>Filen blev kodet af VidCoder.</value>
  </data>
  <data name="StatusQueuedToolTip" xml:space="preserve">
    <value>Kildefilen er i køen.</value>
  </data>
  <data name="StatusSkippedToolTip" xml:space="preserve">
    <value>Koden blev sprunget over af betingelser sat i Picker (som for eksempel filstørrelsen er for lille).</value>
  </data>
  <data name="StatusSucceededToolTip" xml:space="preserve">
    <value>Kodningen afsluttede succesfuldt.</value>
  </data>
  <data name="WatchedFilesHeader" xml:space="preserve">
    <value>Filer</value>
  </data>
  <data name="WatchedFoldersHeader" xml:space="preserve">
    <value>Overvågningsmapper</value>
  </data>
  <data name="WatchedFolderTextBoxLabel" xml:space="preserve">
    <value>Mappe:</value>
  </data>
  <data name="WatcherAddDialogTitle" xml:space="preserve">
    <value>Tilføj overvåget mappe</value>
  </data>
  <data name="WatcherEditDialogTitle" xml:space="preserve">
    <value>Redigér overvåget mappe</value>
  </data>
  <data name="WatcherIntroText" xml:space="preserve">
    <value>Du kan konfigurere Watcher til at observere mapper og automatisk kode videoer, der vises i dem. Watcher-processen kører, når VidCoder lukkes, og starter den for at kode filer.</value>
  </data>
  <data name="WatcherWindowTitle" xml:space="preserve">
    <value>Overvåger - {0}</value>
  </data>
</root>