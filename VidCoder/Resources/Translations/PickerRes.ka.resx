<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" id="root">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace"/>
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0"/>
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string"/>
              <xsd:attribute name="type" type="xsd:string"/>
              <xsd:attribute name="mimetype" type="xsd:string"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string"/>
              <xsd:attribute name="name" type="xsd:string"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1"/>
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3"/>
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4"/>
              <xsd:attribute ref="xml:space"/>
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1"/>
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required"/>
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="DefaultCheckBox" xml:space="preserve">
    <value>სტანდარტი</value>
  </data>
  <data name="LanguagesRadioButton" xml:space="preserve">
    <value>ენა(ები)</value>
  </data>
  <data name="OnlyIfDifferentFromAudioCheckBox" xml:space="preserve">
    <value>მხოლოდ თუ აუდიო გაგსხვავებულ ენაზეა</value>
    <comment>Label for checkbox on subtitle picker. When checked, it will only include the subtitle if it's a different language from the chosen audio track.</comment>
  </data>
  <data name="WindowTitle" xml:space="preserve">
    <value>ამომრჩევი: {0}</value>
  </data>
  <data name="PickerButtonFormat" xml:space="preserve">
    <value>ამომრჩევი: {0}</value>
    <comment>{0} is the name of the picker. This string shows up on the picker split button.</comment>
  </data>
  <data name="OutputLocation" xml:space="preserve">
    <value>დასამახსოვრებელი ადგილი</value>
  </data>
  <data name="OverrideDirectoryCheckBox" xml:space="preserve">
    <value>ფოლდერის გადაწერა:</value>
  </data>
  <data name="PickerHelpText" xml:space="preserve">
    <value>ავტომატური სახელის, აუდიოს, ტიტრის და დასამახსოვრებელი ადგილის არჩევა</value>
  </data>
  <data name="AutoQueueOnScanCheckBox" xml:space="preserve">
    <value>სკანირების დასრულებისას დავალების სიაში დამატება</value>
  </data>
  <data name="AutoEncodeOnScanCheckBox" xml:space="preserve">
    <value>კოდირება სკანირების დასრულებისას</value>
  </data>
  <data name="UseGlobalSettingToolTip" xml:space="preserve">
    <value>ძირითადი პარამეტრების გამოყენება</value>
    <comment>Label for the "indeterminate" checkbox state that lets the user know that this will fall back to the global setting</comment>
  </data>
  <data name="PresetOverrideToolTip" xml:space="preserve">
    <value>გადააწერს ყველაფერს, ძირითად ფანჯარაში არჩეულ შაბლონს.</value>
  </data>
  <data name="EncodingSection" xml:space="preserve">
    <value>კოდირება</value>
    <comment>The header for the Encoding section in the Picker window.</comment>
  </data>
  <data name="PostEncodingSection" xml:space="preserve">
    <value>პოსტკოდირება</value>
    <comment>Header for the post-encoding section in the picker window.</comment>
  </data>
  <data name="SendFileToLabel" xml:space="preserve">
    <value>ფაილის გაგზავნა:</value>
    <comment>Label for the option to run a program after encoding each file.</comment>
  </data>
  <data name="PostEncodeArgumentsLabel" xml:space="preserve">
    <value>არგუმენტები:</value>
    <comment>The label for the arguments to pass to the post-encode executable.</comment>
  </data>
  <data name="PostEncodeArgumentsToolTip" xml:space="preserve">
    <value>პროგრამის სამოქმედო არგუმენტებისთვის გამოიყენეთ {file} დასამახსოვრებელი ფაილისთვის, {folder} დასამახსოვრებელი ფოლდერისთვის ან სხვა პარამეტრები, როგორიცაა {title} და {date} (იხილეთ სახელის ფორმატები).</value>
    <comment>Tool tip for the post-encode arguments UI. Do not translate {file} .</comment>
  </data>
  <data name="PresetDisabledForPickerToolTip" xml:space="preserve">
    <value>კოდირების შაბლონი დადგენილია ამომრჩევის მიერ.</value>
  </data>
  <data name="AddLanguageButton" xml:space="preserve">
    <value>ენის დამატება</value>
  </data>
  <data name="AllTracksForTheseLanguagesRadioButton" xml:space="preserve">
    <value>ამ ენის ყველა წყარო</value>
  </data>
  <data name="AllTracksForThisLanguageRadioButton" xml:space="preserve">
    <value>ამ ენისთვის ყველა წყარო</value>
  </data>
  <data name="FirstTrackOfEachLanguageRadioButton" xml:space="preserve">
    <value>ყველა ენის პირველი წყარო</value>
  </data>
  <data name="FirstTrackRadioButton" xml:space="preserve">
    <value>პირველი წყარო</value>
  </data>
  <data name="SingleSubtitleDefaultToolTip" xml:space="preserve">
    <value>თუ ტიტრის სყარო სტანდარტადაა არჩეული, ვიდეოს რეპროდუქციისას ავტომატურად წარმოისახება.</value>
  </data>
  <data name="MultipleSubtitleDefaultToolTip" xml:space="preserve">
    <value>თუ ტიტრის სყარო პირველადაა არჩეული, ვიდეოს რეპროდუქციისას ავტომატურად წარმოისახება.</value>
  </data>
  <data name="FirstAsDefaultCheckBox" xml:space="preserve">
    <value>პირველის სტანდარტად არჩევა</value>
    <comment>Label for checkbox to mark the first subtitle as default.</comment>
  </data>
  <data name="PresetLabel" xml:space="preserve">
    <value>შაბლონი:</value>
  </data>
  <data name="RemoveLanguageToolTip" xml:space="preserve">
    <value>ამ ენის წაშლა.</value>
  </data>
  <data name="SortLanguagesLabel" xml:space="preserve">
    <value>ენის(ების) თავში გადანაცვლება:</value>
  </data>
  <data name="ForcedOnlyCheckBox" xml:space="preserve">
    <value>მხოლოდ დაძალებული</value>
    <comment>Label for checkbox in Picker window to choose only Forced subtitles of the chosen subtitle track.</comment>
  </data>
  <data name="LastSelectedRadioButton" xml:space="preserve">
    <value>ბოლოს გამოყენებული</value>
  </data>
  <data name="OverrideNameFormatLabel" xml:space="preserve">
    <value>დაშვებული პარამეტრებია: {0}</value>
  </data>
  <data name="DurationFilterStartAutomationName" xml:space="preserve">
    <value>საწყისი წუთების ფილტრის ხანგრძლივობა</value>
    <comment>Screen reader text for number box that represents the start of the filter range in minutes. The number chosen in this box represents the minimum title length in minutes that will be chosen.
</comment>
  </data>
  <data name="DurationFilterEndAutomationName" xml:space="preserve">
    <value>დასასრული წუთების ფილტრის ხანგრძლივობა</value>
    <comment>Screen reader text for number box that represents the end of the filter range in minutes. The number chosen in this box represents the maximum title length in minutes that will be chosen.
</comment>
  </data>
  <data name="DurationFilterCheckBoxAutomationName" xml:space="preserve">
    <value>გაფილტვრა ხანგრძლივობით</value>
    <comment>Name for screen readers for the checkbox to filter titles by a given duration range.</comment>
  </data>
  <data name="ChangeCaptializationLabel" xml:space="preserve">
    <value>ბეჭდური ასოების შეცვლა</value>
  </data>
  <data name="TimeRangeStartAutomationName" xml:space="preserve">
    <value>დროის ინტერვალის საწყისი</value>
  </data>
  <data name="TimeRangeEndAutomationName" xml:space="preserve">
    <value>დროის ინტერვალის დასასრული</value>
  </data>
  <data name="ByIndexRadioButton" xml:space="preserve">
    <value>ინდექსით</value>
    <comment>Label for the choice to choose audio or subtitle tracks by index</comment>
  </data>
  <data name="SelectTracksLabel" xml:space="preserve">
    <value>წყაროს არჩევა:</value>
  </data>
  <data name="SelectTracksHelpText" xml:space="preserve">
    <value>მძიმით გამოყოფა - მაგ. 2,5</value>
  </data>
  <data name="ChapterRangeEndAutomationName" xml:space="preserve">
    <value>სათავის დროის ინტერვალი დასრულება</value>
  </data>
  <data name="ChapterRangeStartAutomationName" xml:space="preserve">
    <value>სათავის დროის ინტერვალი დაწყება</value>
  </data>
  <data name="DestinationSection" xml:space="preserve">
    <value>შენახვის ადგილი</value>
  </data>
  <data name="OutputFolder" xml:space="preserve">
    <value>დასამახსოვრებელი ადგილი</value>
    <comment>Label for the output folder.</comment>
  </data>
  <data name="UseCustomFileNameFormatCheckBox" xml:space="preserve">
    <value>პერსონალური სახელის ფორმატის გამოყენება:</value>
  </data>
  <data name="WhenFileExistsBatch" xml:space="preserve">
    <value>ფაილის არსებობისას (მასიური):</value>
  </data>
  <data name="WhenFileExistsSingle" xml:space="preserve">
    <value>ფაილის არსებობისას (ერთი):</value>
  </data>
  <data name="CustomPickerNameTemplate" xml:space="preserve">
    <value>პერსონალური</value>
    <comment>The name for a custom auto-created picker. {0} is a number like 2, or 3 or 4 to differentiate it</comment>
  </data>
  <data name="OutputFileNameFormatAutomationName" xml:space="preserve">
    <value>ფაილის სახელის ფორმატი</value>
    <comment>Name for screen readers for the output file name format text box</comment>
  </data>
  <data name="OnlyChangeCapitalizationIfAllSameLabel" xml:space="preserve">
    <value>მხოლოდ შეცვლა, თუ ყველა ასო პატარა ან დიდია</value>
  </data>
  <data name="WordBreakCharacterAutomationNameFormat" xml:space="preserve">
    <value>სიტყვის შესავსები სიმბოლო - {0}</value>
    <comment>Screen reader format for word break checkboxes. These will determine if a character will be used to separate words.</comment>
  </data>
  <data name="WordBreakCharactersLabel" xml:space="preserve">
    <value>ნაცნობი სიტყვის შესავსები სიმბოლოები:</value>
  </data>
  <data name="WordBreakCharacter_Dot" xml:space="preserve">
    <value>წერტილი</value>
  </data>
  <data name="WordBreakCharacter_Space" xml:space="preserve">
    <value>ინტერვალი</value>
  </data>
  <data name="WordBreakCharacter_Underscore" xml:space="preserve">
    <value>ქვედა ხაზი</value>
  </data>
  <data name="ChangeWordSeparatorLabel" xml:space="preserve">
    <value>სიტყვის შესავსების შეცვლა</value>
  </data>
  <data name="SourceCleanupPreviewLabel" xml:space="preserve">
    <value>წარმოსახვა:</value>
  </data>
  <data name="SourceNameCleanupSection" xml:space="preserve">
    <value>ორიგინალი სახელის გასუფთავება</value>
  </data>
  <data name="AddAudioTrackNameButton" xml:space="preserve">
    <value>აუდიო წყაროს სახელის დამატება</value>
    <comment>Button to add another name to the list of audio track names in the Picker.</comment>
  </data>
  <data name="AddSubtitleTrackNameButton" xml:space="preserve">
    <value>ტიტრის წყაროს სახელის დამატება</value>
    <comment>Button to add another name to the list of subtitle track names in the Picker.</comment>
  </data>
  <data name="CustomTrackNamesCheckBox" xml:space="preserve">
    <value>პერსონალური სახელი</value>
    <comment>Checkbox label to use custom audio or subtitle track names</comment>
  </data>
  <data name="TrackAutomationFormat" xml:space="preserve">
    <value>წყარო {0}</value>
    <comment>Screen reader format for track names in the Picker.</comment>
  </data>
  <data name="BurnInLabel" xml:space="preserve">
    <value>კოდირება:</value>
  </data>
  <data name="PickerAudioSectionName" xml:space="preserve">
    <value>აუდიო</value>
  </data>
  <data name="PickerForeignAudioCheckBox" xml:space="preserve">
    <value>სხვა ენის სკანირების წყაროს დამატება</value>
  </data>
  <data name="PickerSubtitleSectionName" xml:space="preserve">
    <value>ტიტრები</value>
  </data>
  <data name="SubtitleSelectionMode_ForeignAudioSearch" xml:space="preserve">
    <value>სხვა წყაროს აუდიოს სკანირება</value>
  </data>
  <data name="TrackSelectionLabel" xml:space="preserve">
    <value>წყაროს ამორჩევა:</value>
    <comment>Label for track selection mode for audio or subtitle tracks.</comment>
  </data>
  <data name="AudioSelectionModeToolTip" xml:space="preserve">
    <value>ბოლოს გამოყენებული - არსებობისას ირჩევს ბოლოს გამოყენებულ აუდიო წყაროს, არ არსებობისას წყაროს პირველ ენას.
პირველი - მხოლოდ პირველი აუდიოს გამოყენება.
ინდექსით - წყაროს ინდექსით არჩევა (I-ჩათვლით).
ენა(ები) - ენის მიხედვით არჩევა.
ყველა - ყველა აუდიო წყაროს გამოყენება.</value>
  </data>
  <data name="SubtitleSelectionModeToolTip" xml:space="preserve">
    <value>ბოლოს გამოყენებული - არსებობისას ირჩევს ბოლოს გამოყენებულ ტოტრის წყაროს, არ არსებობისას ტიტრის გარეშეა.
არანაირი - ტიტრის გარეშე.
პირველი - მხოლოდ პირველი ტიტრის გამოყენება.
ინდექსით - წყაროს ინდექსით არჩევა (I-ჩათვლით)
ენა(ები) - ენის მიხედვით არჩევა
ყველა - ყველა ტიტრის წყაროს გამოყენება.</value>
  </data>
  <data name="IgnoreFilesBelowCheckBox" xml:space="preserve">
    <value>ფაილების იგნორირება</value>
    <comment>A number box follows this string: Ignore files below [ 10 ] MB</comment>
  </data>
  <data name="TimeRangeLabel" xml:space="preserve">
    <value>დროის ინტერვალი:</value>
  </data>
  <data name="VideoSelectionSection" xml:space="preserve">
    <value>ვიდეოს არჩევა</value>
  </data>
  <data name="MetadataSection" xml:space="preserve">
    <value>მეტადატა</value>
  </data>
  <data name="PassThroughMetadataCheckBox" xml:space="preserve">
    <value>ვიდეო მეტადატის შენარჩუნება (დირექტორი, წარმოების თარიღი, მსახიობები, დ.ა.შ)</value>
  </data>
  <data name="BurnInCheckBox" xml:space="preserve">
    <value>ტიტრის კოდირება</value>
  </data>
  <data name="ExternalSubtitleImportCheckBox" xml:space="preserve">
    <value>გარე ტიტრის დამატება ({0}) იგივე სახელით, რაც ვიდეო ფაილია</value>
  </data>
  <data name="LanguageLabel" xml:space="preserve">
    <value>ენა:</value>
  </data>
  <data name="SourceFileRemovalConfirmationCheckBox" xml:space="preserve">
    <value>ფაილის წაშლისას დათანხმება</value>
  </data>
  <data name="SourceFileRemovalLabel" xml:space="preserve">
    <value>წარმატებული კოდირების შემდეგ წყაროს ფაილის წაშლა:</value>
    <comment>Label for the option to automatically delete source files on completion.</comment>
  </data>
  <data name="HeightFilterCheckBox" xml:space="preserve">
    <value>მხოლოდ სიმაღლის მიხედვით არჩევა</value>
    <comment>Label before the UI to pick the title height limitation. For example, it might read "Pick only titles with height [ &gt; ] [ 480 ]"</comment>
  </data>
  <data name="HeightFilterCheckBoxAutomationName" xml:space="preserve">
    <value>სიმაღლის მიხედვით გაფილტრვა</value>
    <comment>Screen reader text for the height filter checkbox</comment>
  </data>
  <data name="HeightFilterValueAutomationName" xml:space="preserve">
    <value>სიმაღლის გაფილტრვა</value>
    <comment>Screen reader text for the height filter value</comment>
  </data>
  <data name="WidthFilterCheckBox" xml:space="preserve">
    <value>მხოლოდ სიგანის მიხედვით არჩევა</value>
    <comment>Label before the UI to pick the title width limitation. For example, it might read "Pick only titles with width [ &gt; ] [ 640 ]"</comment>
  </data>
  <data name="WidthFilterCheckBoxAutomationName" xml:space="preserve">
    <value>სიგანის მიხედვით გაფილტრვა</value>
    <comment>Screen reader text for the width filter checkbox</comment>
  </data>
  <data name="WidthFilterValueAutomationName" xml:space="preserve">
    <value>სიგანის გაფილტრვა</value>
    <comment>Screen reader text for the width filter value</comment>
  </data>
</root>