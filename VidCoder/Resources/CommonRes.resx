<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AboutLicense" xml:space="preserve">
    <value>This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version.

This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.

A full copy of the GNU General Public License has been included along with this program.</value>
  </data>
  <data name="BurnedSubtitleToolTip" xml:space="preserve">
    <value>Burn the subtitles onto the picture. With burned subtitles, you cannot disable them during playback.</value>
  </data>
  <data name="DefaultSubtitleToolTip" xml:space="preserve">
    <value>Mark this subtitle track as the default. This will show up during playback until another track is picked.</value>
  </data>
  <data name="ForcedSubtitleToolTip" xml:space="preserve">
    <value>Only display forced subtitles from the subtitle track(s). Usually this means small bits of foreign dialogue.</value>
  </data>
  <data name="OffsetSubtitleToolTip" xml:space="preserve">
    <value>The amount of time to push forward or delay the appearance of the given subtitles.</value>
  </data>
  <data name="QueueColumnNameRange" xml:space="preserve">
    <value>Range</value>
    <comment>The label for the queue column that specifies what portion of the video to encode. (Like 25:23 - 37:50)</comment>
  </data>
  <data name="QueueColumnNameDestination" xml:space="preserve">
    <value>Destination</value>
  </data>
  <data name="QueueColumnNameSource" xml:space="preserve">
    <value>Source</value>
  </data>
  <data name="QueueColumnNameTitle" xml:space="preserve">
    <value>Title</value>
    <comment>The label for the queue column that shows the title number. For DVDs or Blu-rays this identifies which title on the disc will be encoded. For files this is usually 1.</comment>
  </data>
  <data name="QueueColumnNameAudioQuality" xml:space="preserve">
    <value>Audio Quality</value>
  </data>
  <data name="QueueColumnNameAudioEncoder" xml:space="preserve">
    <value>Audio Encoder</value>
  </data>
  <data name="QueueColumnNameVideoEncoder" xml:space="preserve">
    <value>Video Encoder</value>
  </data>
  <data name="QueueColumnNameVideoQuality" xml:space="preserve">
    <value>Video Quality</value>
  </data>
  <data name="QueueEtaToolTip" xml:space="preserve">
    <value>Estimated time remaining for all jobs in the queue to complete.</value>
  </data>
  <data name="QueueColumnNameDuration" xml:space="preserve">
    <value>Duration</value>
  </data>
  <data name="ForeignAudioSearchToolTip" xml:space="preserve">
    <value>Searches for subtitle track that is likely to contain bits of foreign dialogue. Good for movies that are mainly in your native language.</value>
  </data>
  <data name="Default" xml:space="preserve">
    <value>Default</value>
    <comment>Usually used in settings, when there is a default option. For example for Decomb there is Off, Default, Fast, Bob and Custom.</comment>
  </data>
  <data name="Custom" xml:space="preserve">
    <value>Custom</value>
    <comment>Usually used in settings, when there is a default option. For example for Decomb there is Off, Default, Fast, Bob and Custom.</comment>
  </data>
  <data name="Browse" xml:space="preserve">
    <value>Browse…</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="PreviewLabel" xml:space="preserve">
    <value>Preview</value>
  </data>
  <data name="Automatic" xml:space="preserve">
    <value>Automatic</value>
  </data>
  <data name="Off" xml:space="preserve">
    <value>Off</value>
    <comment>Usually used in settings, when there is a default option. For example for Decomb there is Off, Default, Fast, Bob and Custom.</comment>
  </data>
  <data name="All" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="StreamChoice" xml:space="preserve">
    <value>Stream {0}</value>
    <comment>Used in the encoding settings dialog to mark which audio stream an audio encoding is targeting. By default the encoding works on all streams but you can target it to affect only the first stream, in which case it would label it "Stream 1"</comment>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="Disabled" xml:space="preserve">
    <value>Disabled</value>
  </data>
  <data name="Remove" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="Copy" xml:space="preserve">
    <value>Copy</value>
  </data>
  <data name="Yes" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="No" xml:space="preserve">
    <value>No</value>
  </data>
  <data name="CouldNotAccessDirectoriesError" xml:space="preserve">
    <value>Could not access the following directories:</value>
  </data>
  <data name="None" xml:space="preserve">
    <value>None</value>
  </data>
  <data name="Succeeded" xml:space="preserve">
    <value>Succeeded</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="FilePickerExtTemplate" xml:space="preserve">
    <value>{0} Files</value>
  </data>
  <data name="QueueColumnNamePreset" xml:space="preserve">
    <value>Preset</value>
  </data>
  <data name="Success" xml:space="preserve">
    <value>Success</value>
  </data>
  <data name="ConfirmDialogTitle" xml:space="preserve">
    <value>Confirm</value>
  </data>
  <data name="FileFailureErrorMessage" xml:space="preserve">
    <value>Could not complete the file operation.</value>
  </data>
  <data name="FileFailureErrorTitle" xml:space="preserve">
    <value>File operation error</value>
  </data>
  <data name="OverrideNameFormatCheckBox" xml:space="preserve">
    <value>Override naming format:</value>
  </data>
  <data name="OutputToSourceDirCheckBox" xml:space="preserve">
    <value>Output to the source folder if possible</value>
  </data>
  <data name="PreserveFolderStructureCheckBox" xml:space="preserve">
    <value>Preserve folder structure in batch encodes</value>
  </data>
  <data name="PreserveFolderStructureToolTip" xml:space="preserve">
    <value>If you encode a folder full of files the encoded versions will be put into subfolders to match the source folder structure.</value>
  </data>
  <data name="DismissMessage" xml:space="preserve">
    <value>Dismiss message</value>
    <comment>Appears as a tooltip on inline, dismissable messages</comment>
  </data>
  <data name="PresetFileFilter" xml:space="preserve">
    <value>VidCoder Preset File</value>
    <comment>File dialog description of a .vjpreset file: JSON file that stores an exported preset.</comment>
  </data>
  <data name="QueueFileFilter" xml:space="preserve">
    <value>VidCoder Queue File</value>
    <comment>File dialog description of a .vjqueue file: JSON file that stores an exported queue.</comment>
  </data>
  <data name="First" xml:space="preserve">
    <value>First</value>
    <comment>Choice to pick the first item in a list, like audio or subtitle tracks.</comment>
  </data>
  <data name="DuplicateTrack" xml:space="preserve">
    <value>Duplicate this track</value>
    <comment>Tip to duplicate the audio or subtitle track.</comment>
  </data>
  <data name="RemoveTrack" xml:space="preserve">
    <value>Remove this track</value>
    <comment>Tip for button to remove the audio or subtitle track.</comment>
  </data>
  <data name="SelectedOverTotalAudioTracksFormat" xml:space="preserve">
    <value>{0}/{1} audio track(s)</value>
    <comment>{0} is the number of selected audio tracks and {1} is the number of total tracks on the source.</comment>
  </data>
  <data name="SelectedOverTotalSubtitleTracksFormat" xml:space="preserve">
    <value>{0}/{1} subtitle track(s)</value>
    <comment>{0} is the number of selected subtitle tracks and {1} is the number of total tracks on the source.</comment>
  </data>
  <data name="NumberBoxIncreaseButtonAutomationTextFormat" xml:space="preserve">
    <value>Increase {0}</value>
    <comment>Automation text for the increase button on the number box.
{0} - The name of the value the control is changing, for example "width"</comment>
  </data>
  <data name="NumberBoxDecreaseButtonAutomationTextFormat" xml:space="preserve">
    <value>Decrease {0}</value>
    <comment>Automation text for the decrease button on the number box.
{0} - The name of the value the control is changing, for example "width"</comment>
  </data>
  <data name="OpenSplitButtonAutomationName" xml:space="preserve">
    <value>Open split button</value>
    <comment>Automation name for screen readers for the "open" arrow on a split button</comment>
  </data>
  <data name="Unknown" xml:space="preserve">
    <value>Unknown</value>
    <comment>Used when a value is not known.</comment>
  </data>
  <data name="DefaultLabel" xml:space="preserve">
    <value>Default:</value>
  </data>
  <data name="QueueColumnNameAudioTracks" xml:space="preserve">
    <value>Audio Tracks</value>
  </data>
  <data name="QueueColumnNameCropping" xml:space="preserve">
    <value>Cropping</value>
  </data>
  <data name="QueueColumnNameOutputSize" xml:space="preserve">
    <value>Output Size</value>
  </data>
  <data name="QueueColumnNameSubtitleTracks" xml:space="preserve">
    <value>Subtitle Tracks</value>
  </data>
  <data name="Manual" xml:space="preserve">
    <value>Manual</value>
    <comment>Shown when something has been set manually</comment>
  </data>
  <data name="FileNoLongerExists" xml:space="preserve">
    <value>File no longer exists.</value>
  </data>
  <data name="MegabytesAbbreviation" xml:space="preserve">
    <value>MB</value>
    <comment>Abbreviation for megabytes</comment>
  </data>
</root>