//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace VidCoder.Resources {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "15.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class PickerRes {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PickerRes() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("VidCoder.Resources.PickerRes", typeof(PickerRes).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Add Language.
        /// </summary>
        public static string AddLanguageButton {
            get {
                return ResourceManager.GetString("AddLanguageButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include all subtitles..
        /// </summary>
        public static string AllSubtitlesToolTip {
            get {
                return ResourceManager.GetString("AllSubtitlesToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All tracks for these languages.
        /// </summary>
        public static string AllTracksForTheseLanguagesRadioButton {
            get {
                return ResourceManager.GetString("AllTracksForTheseLanguagesRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All tracks for this language.
        /// </summary>
        public static string AllTracksForThisLanguageRadioButton {
            get {
                return ResourceManager.GetString("AllTracksForThisLanguageRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include all audio tracks..
        /// </summary>
        public static string AudioAllToolTip {
            get {
                return ResourceManager.GetString("AudioAllToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include only the first audio track..
        /// </summary>
        public static string AudioFirstToolTip {
            get {
                return ResourceManager.GetString("AudioFirstToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Audio selection.
        /// </summary>
        public static string AudioSelection {
            get {
                return ResourceManager.GetString("AudioSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Start encoding after scan.
        /// </summary>
        public static string AutoEncodeOnScanCheckBox {
            get {
                return ResourceManager.GetString("AutoEncodeOnScanCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically queue after scanning.
        /// </summary>
        public static string AutoQueueOnScanCheckBox {
            get {
                return ResourceManager.GetString("AutoQueueOnScanCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Burn in.
        /// </summary>
        public static string BurnInCheckBox {
            get {
                return ResourceManager.GetString("BurnInCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Default.
        /// </summary>
        public static string DefaultCheckBox {
            get {
                return ResourceManager.GetString("DefaultCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Encoding.
        /// </summary>
        public static string EncodingSection {
            get {
                return ResourceManager.GetString("EncodingSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark first as default.
        /// </summary>
        public static string FirstAsDefaultCheckBox {
            get {
                return ResourceManager.GetString("FirstAsDefaultCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First track of each language.
        /// </summary>
        public static string FirstTrackOfEachLanguageRadioButton {
            get {
                return ResourceManager.GetString("FirstTrackOfEachLanguageRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to First track.
        /// </summary>
        public static string FirstTrackRadioButton {
            get {
                return ResourceManager.GetString("FirstTrackRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Forced only.
        /// </summary>
        public static string ForcedOnlyCheckBox {
            get {
                return ResourceManager.GetString("ForcedOnlyCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Foreign Audio Search.
        /// </summary>
        public static string ForeignAudioSearchRadioButton {
            get {
                return ResourceManager.GetString("ForeignAudioSearchRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to All tracks.
        /// </summary>
        public static string IncludeAllTracksRadioButton {
            get {
                return ResourceManager.GetString("IncludeAllTracksRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Language(s).
        /// </summary>
        public static string LanguagesRadioButton {
            get {
                return ResourceManager.GetString("LanguagesRadioButton", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark the first subtitle track as default, so it shows up automatically when playing the video..
        /// </summary>
        public static string MultipleSubtitleDefaultToolTip {
            get {
                return ResourceManager.GetString("MultipleSubtitleDefaultToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Only if different language from audio.
        /// </summary>
        public static string OnlyIfDifferentFromAudioCheckBox {
            get {
                return ResourceManager.GetString("OnlyIfDifferentFromAudioCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Output location.
        /// </summary>
        public static string OutputLocation {
            get {
                return ResourceManager.GetString("OutputLocation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Override directory:.
        /// </summary>
        public static string OverrideDirectoryCheckBox {
            get {
                return ResourceManager.GetString("OverrideDirectoryCheckBox", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Available arguments: {source} {title} {range} {preset} {date} {time} {quality} {parent} {titleduration}.
        /// </summary>
        public static string OverrideNameFormatLabel {
            get {
                return ResourceManager.GetString("OverrideNameFormatLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Picker: {0}.
        /// </summary>
        public static string PickerButtonFormat {
            get {
                return ResourceManager.GetString("PickerButtonFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Automatically pick titles, audio, subtitles and destination.
        /// </summary>
        public static string PickerHelpText {
            get {
                return ResourceManager.GetString("PickerHelpText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Arguments:.
        /// </summary>
        public static string PostEncodeArgumentsLabel {
            get {
                return ResourceManager.GetString("PostEncodeArgumentsLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The arguments to pass to the program. Use {file} for the file output path, {folder} as containing folder path or other path arguments like {title} and {date} (see Naming Format)..
        /// </summary>
        public static string PostEncodeArgumentsToolTip {
            get {
                return ResourceManager.GetString("PostEncodeArgumentsToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Post-encoding.
        /// </summary>
        public static string PostEncodingSection {
            get {
                return ResourceManager.GetString("PostEncodingSection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Picker has specified the encoding preset..
        /// </summary>
        public static string PresetDisabledForPickerToolTip {
            get {
                return ResourceManager.GetString("PresetDisabledForPickerToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use preset:.
        /// </summary>
        public static string PresetLabel {
            get {
                return ResourceManager.GetString("PresetLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to This will override any preset picked in the main window..
        /// </summary>
        public static string PresetOverrideToolTip {
            get {
                return ResourceManager.GetString("PresetOverrideToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Remove this language..
        /// </summary>
        public static string RemoveLanguageToolTip {
            get {
                return ResourceManager.GetString("RemoveLanguageToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Send file to:.
        /// </summary>
        public static string SendFileToLabel {
            get {
                return ResourceManager.GetString("SendFileToLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Mark the subtitle track as default, so it will show up automatically when playing the video..
        /// </summary>
        public static string SingleSubtitleDefaultToolTip {
            get {
                return ResourceManager.GetString("SingleSubtitleDefaultToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Sort language(s) to top:.
        /// </summary>
        public static string SortLanguagesLabel {
            get {
                return ResourceManager.GetString("SortLanguagesLabel", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Include only the first subtitle..
        /// </summary>
        public static string SubtitleFirstToolTip {
            get {
                return ResourceManager.GetString("SubtitleFirstToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to No subtitles are included..
        /// </summary>
        public static string SubtitleNoneToolTip {
            get {
                return ResourceManager.GetString("SubtitleNoneToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Subtitle selection.
        /// </summary>
        public static string SubtitleSelection {
            get {
                return ResourceManager.GetString("SubtitleSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Title selection.
        /// </summary>
        public static string TitleSelection {
            get {
                return ResourceManager.GetString("TitleSelection", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Use global setting.
        /// </summary>
        public static string UseGlobalSettingToolTip {
            get {
                return ResourceManager.GetString("UseGlobalSettingToolTip", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Picker: {0}.
        /// </summary>
        public static string WindowTitle {
            get {
                return ResourceManager.GetString("WindowTitle", resourceCulture);
            }
        }
    }
}
